/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cafe.management.system;

import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import dao.BillDao;
import java.io.FileOutputStream;
import model.PaymentHistory;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import common.OpenPdf;
import dao.PaymentHistoryDao;
import model.Bill;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.util.Locale;

/**
 *
 * @author ridwa
 */
public class PaymentConfirmationDialog extends javax.swing.JFrame {

    public PaymentConfirmationDialog() {
        initComponents();
        showPaymentHistory();
    }

    private void showPaymentHistory() {
        try {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // Bersihkan tabel sebelum menambahkan data baru

            ArrayList<PaymentHistory> paymentList = PaymentHistoryDao.getAllPaymentHistory();

            for (PaymentHistory payment : paymentList) {
                Object[] row = {
                    payment.getId(),
                    payment.getBillId(),
                    payment.getAmountPaid(),
                    new SimpleDateFormat("yyyy-MM-dd").format(payment.getPaymentDate()),
                    payment.getStatus(),
                    payment.getCustomerName(),
                    payment.getCustomerEmail(),
                    payment.getCustomerMobile()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal mengambil data riwayat pembayaran: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btn_close = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(350, 134));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Bill ID", "Total", "Tanggal", "Status"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 84, 534, 275));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Histori Pembayaran");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 21, -1, -1));

        btn_close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        btn_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_closeActionPerformed(evt);
            }
        });
        getContentPane().add(btn_close, new org.netbeans.lib.awtextra.AbsoluteConstraints(658, 21, 30, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/small-page-background.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_closeActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Home().setVisible(true);
    }//GEN-LAST:event_btn_closeActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            String paymentId = jTable1.getValueAt(selectedRow, 0).toString();
            String customerBillId = jTable1.getValueAt(selectedRow, 1).toString();
            String totalPaid = jTable1.getValueAt(selectedRow, 2).toString();
            String paymentDate = jTable1.getValueAt(selectedRow, 3).toString();
            String status = jTable1.getValueAt(selectedRow, 4).toString();

            // Ambil data pelanggan dari database
            Bill bill = BillDao.getBillById(customerBillId);
            if (bill != null) {
                String customerName = bill.getName();
                String customerEmail = bill.getEmail();
                String customerPhoneNumber = bill.getMobileNumber();
                createPaymentDetailsPDF(paymentId, customerBillId, totalPaid, paymentDate, status, customerName, customerEmail, customerPhoneNumber);
            } else {
                JOptionPane.showMessageDialog(null, "Bill data not found for ID: " + customerBillId);
            }

        }
    }

    private void createPaymentDetailsPDF(String paymentId, String customerBillId, String totalPaid, String paymentDate, String status, String customerName, String customerEmail, String customerPhoneNumber) {
        String path = "E:\\"; // Ganti dengan path tempat penyimpanan PDF
        Document doc = new Document();
        try {
            PdfWriter.getInstance(doc, new FileOutputStream(path + paymentId + ".pdf"));
            doc.open();

            // Judul
            Paragraph cafeName = new Paragraph("Cafe Management System\n", new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD));
            cafeName.setAlignment(Element.ALIGN_CENTER);
            doc.add(cafeName);

            // Garis pemisah
            Paragraph starLine = new Paragraph("*******************************************************************************************************");
            doc.add(starLine);

            // Ambil informasi pelanggan dari database berdasarkan customerBillId
            ArrayList<PaymentHistory> paymentList = PaymentHistoryDao.getAllPaymentHistory();
            boolean found = false;
            for (PaymentHistory payment : paymentList) {
                if (payment.getBillId() == Integer.parseInt(customerBillId)) {
                    found = true;
                    // Informasi pelanggan
                    Paragraph customerInfo = new Paragraph("\nName: " + payment.getCustomerName() + "\nEmail: " + payment.getCustomerEmail() + "\nMobile Number: " + payment.getCustomerMobile() + "\n");
                    doc.add(customerInfo);

                    break; // Hentikan loop setelah data ditemukan
                }
            }
            if (!found) {
                JOptionPane.showMessageDialog(null, "Data tagihan tidak ditemukan untuk ID: " + customerBillId);
            }

            doc.add(starLine);

            // Tambahkan tabel detail pembayaran
            Paragraph paymentDetails = new Paragraph("Detail Pembayaran", new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD));
            paymentDetails.setAlignment(Element.ALIGN_CENTER);
            doc.add(paymentDetails);
  

            // Informasi tagihan
            PdfPTable billTable = new PdfPTable(5); // Ubah jumlah kolom sesuai dengan kebutuhan
            billTable.setWidthPercentage(100);
            billTable.setSpacingBefore(10f);
            billTable.setSpacingAfter(10f);

            PdfPCell cell1 = new PdfPCell(new Paragraph("Payment ID"));
            PdfPCell cell2 = new PdfPCell(new Paragraph("Customer Bill ID"));
            PdfPCell cell3 = new PdfPCell(new Paragraph("Total Paid"));
            PdfPCell cell4 = new PdfPCell(new Paragraph("Payment Date"));
            PdfPCell cell5 = new PdfPCell(new Paragraph("Status"));

            billTable.addCell(cell1);
            billTable.addCell(cell2);
            billTable.addCell(cell3);
            billTable.addCell(cell4);
            billTable.addCell(cell5);

            // Data tagihan
            billTable.addCell(paymentId);
            billTable.addCell(customerBillId);
            billTable.addCell(totalPaid);
            billTable.addCell(paymentDate);
            billTable.addCell(status);

            doc.add(billTable);
            doc.add(starLine);
            // Pesan terima kasih
            Paragraph thanksMsg = new Paragraph("Terimakasih, atas kunjungan Anda.", new Font(Font.FontFamily.TIMES_ROMAN, 14, Font.ITALIC));
            thanksMsg.setAlignment(Element.ALIGN_CENTER);
            doc.add(thanksMsg);

            // Tanggal dan tanda tangan
            String todayDate = new SimpleDateFormat("dd-MM-yyyy").format(new Date());
            String todayDay = new SimpleDateFormat("EEEE", new Locale("id", "ID")).format(new Date());
            Paragraph dateAndSignature = new Paragraph("Jakarta, " + todayDay + ", " + todayDate + "\n\n(Akbar Coffee Shop)", new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL));
            dateAndSignature.setAlignment(Element.ALIGN_RIGHT);
            doc.add(dateAndSignature);

            // Buka file PDF yang telah dibuat
            OpenPdf.openById(String.valueOf(paymentId));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error creating PDF: " + e.getMessage());
        } finally {
            if (doc != null) {
                doc.close();
            }
        }

    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentConfirmationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentConfirmationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentConfirmationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentConfirmationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentConfirmationDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_close;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
